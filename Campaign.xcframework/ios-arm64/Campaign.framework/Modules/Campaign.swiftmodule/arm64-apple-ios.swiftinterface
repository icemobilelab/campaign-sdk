// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios16.2 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Campaign
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import Campaign
import Foundation
import Swift
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
public protocol LocaleProvider {
  func get() -> Foundation.Locale
}
@_hasMissingDesignatedInitializers public class IceCampaign {
  public static func initialize(config: Campaign.CampaignConfig)
  @objc deinit
}
public protocol AuthenticationProvider {
  func get() -> Swift.String
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class CampaignView : UIKit.UIView, WebKit.WKNavigationDelegate {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  #if compiler(>=5.3) && $AsyncAwait
  @_Concurrency.MainActor(unsafe) @objc public func webView(_ webView: WebKit.WKWebView, decidePolicyFor navigationAction: WebKit.WKNavigationAction) async -> WebKit.WKNavigationActionPolicy
  #endif
  @objc deinit
}
extension UIKit.UIView : WebKit.WKScriptMessageHandler {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func userContentController(_ userContentController: WebKit.WKUserContentController, didReceive message: WebKit.WKScriptMessage)
}
@_hasMissingDesignatedInitializers public class CampaignConfig {
  public class Builder {
    required public init()
    @discardableResult
    public func withLocaleProvider(_ localeProvider: Campaign.LocaleProvider) -> Campaign.CampaignConfig.Builder
    @discardableResult
    public func withExtraParameterProvider(_ extraParameterProvider: Campaign.ExtraParameterProvider) -> Campaign.CampaignConfig.Builder
    @discardableResult
    public func withCardNumberProvider(_ cardNumberProvider: Campaign.CardNumberProvider) -> Campaign.CampaignConfig.Builder
    @discardableResult
    public func withAuthenticationProvider(_ authenticationProvider: Campaign.AuthenticationProvider) -> Campaign.CampaignConfig.Builder
    public func build(apiKey: Swift.String) throws -> Campaign.CampaignConfig
    @objc deinit
  }
  @objc deinit
}
public protocol CardNumberProvider {
  func get() -> Swift.String
}
public protocol ExtraParameterProvider {
  func get() -> [Swift.String : Swift.String]
}
